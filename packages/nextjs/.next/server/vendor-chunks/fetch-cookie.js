"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/fetch-cookie";
exports.ids = ["vendor-chunks/fetch-cookie"];
exports.modules = {

/***/ "(ssr)/./node_modules/fetch-cookie/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/fetch-cookie/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var tough_cookie__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ fetchCookie)\n/* harmony export */ });\n/* harmony import */ var tough_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tough-cookie */ \"(ssr)/./node_modules/tough-cookie/lib/cookie.js\");\n/* harmony import */ var set_cookie_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! set-cookie-parser */ \"(ssr)/./node_modules/set-cookie-parser/lib/set-cookie.js\");\n\n\nfunction isDomainOrSubdomain(destination, original) {\n  const orig = new URL(original).hostname;\n  const dest = new URL(destination).hostname;\n  return orig === dest || orig.endsWith(`.${dest}`);\n}\nconst referrerPolicy = /* @__PURE__ */ new Set([\n  \"\",\n  \"no-referrer\",\n  \"no-referrer-when-downgrade\",\n  \"same-origin\",\n  \"origin\",\n  \"strict-origin\",\n  \"origin-when-cross-origin\",\n  \"strict-origin-when-cross-origin\",\n  \"unsafe-url\"\n]);\nfunction parseReferrerPolicy(policyHeader) {\n  const policyTokens = policyHeader.split(/[,\\s]+/);\n  let policy = \"\";\n  for (const token of policyTokens) {\n    if (token !== \"\" && referrerPolicy.has(token)) {\n      policy = token;\n    }\n  }\n  return policy;\n}\nfunction doNothing(init, name) {\n}\nfunction callDeleteMethod(init, name) {\n  init.headers.delete(name);\n}\nfunction deleteFromObject(init, name) {\n  const headers = init.headers;\n  for (const key of Object.keys(headers)) {\n    if (key.toLowerCase() === name) {\n      delete headers[key];\n    }\n  }\n}\nfunction identifyDeleteHeader(init) {\n  if (init.headers == null) {\n    return doNothing;\n  }\n  if (typeof init.headers.delete === \"function\") {\n    return callDeleteMethod;\n  }\n  return deleteFromObject;\n}\nconst redirectStatus = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nfunction isRedirect(status) {\n  return redirectStatus.has(status);\n}\nasync function handleRedirect(fetchImpl, init, response) {\n  switch (init.redirect ?? \"follow\") {\n    case \"error\":\n      throw new TypeError(`URI requested responded with a redirect and redirect mode is set to error: ${response.url}`);\n    case \"manual\":\n      return response;\n    case \"follow\":\n      break;\n    default:\n      throw new TypeError(`Invalid redirect option: ${init.redirect}`);\n  }\n  const locationUrl = response.headers.get(\"location\");\n  if (locationUrl === null) {\n    return response;\n  }\n  const requestUrl = response.url;\n  const redirectUrl = new URL(locationUrl, requestUrl).toString();\n  const redirectCount = init.redirectCount ?? 0;\n  const maxRedirect = init.maxRedirect ?? 20;\n  if (redirectCount >= maxRedirect) {\n    throw new TypeError(`Reached maximum redirect of ${maxRedirect} for URL: ${requestUrl}`);\n  }\n  init = {\n    ...init,\n    redirectCount: redirectCount + 1\n  };\n  const deleteHeader = identifyDeleteHeader(init);\n  if (!isDomainOrSubdomain(requestUrl, redirectUrl)) {\n    for (const name of [\"authorization\", \"www-authenticate\", \"cookie\", \"cookie2\"]) {\n      deleteHeader(init, name);\n    }\n  }\n  const maybeNodeStreamBody = init.body;\n  const maybeStreamBody = init.body;\n  if (response.status !== 303 && init.body != null && (typeof maybeNodeStreamBody.pipe === \"function\" || typeof maybeStreamBody.pipeTo === \"function\")) {\n    throw new TypeError(\"Cannot follow redirect with body being a readable stream\");\n  }\n  if (response.status === 303 || (response.status === 301 || response.status === 302) && init.method === \"POST\") {\n    init.method = \"GET\";\n    init.body = void 0;\n    deleteHeader(init, \"content-length\");\n  }\n  if (response.headers.has(\"referrer-policy\")) {\n    init.referrerPolicy = parseReferrerPolicy(response.headers.get(\"referrer-policy\"));\n  }\n  return await fetchImpl(redirectUrl, init);\n}\nfunction addCookiesToRequest(input, init, cookie) {\n  if (cookie === \"\") {\n    return init;\n  }\n  const maybeRequest = input;\n  const maybeHeaders = init.headers;\n  if (maybeRequest.headers && typeof maybeRequest.headers.append === \"function\") {\n    maybeRequest.headers.append(\"cookie\", cookie);\n  } else if (maybeHeaders && typeof maybeHeaders.append === \"function\") {\n    maybeHeaders.append(\"cookie\", cookie);\n  } else {\n    init = { ...init, headers: { ...init.headers, cookie } };\n  }\n  return init;\n}\nfunction getCookiesFromResponse(response) {\n  const maybeNodeFetchHeaders = response.headers;\n  if (typeof maybeNodeFetchHeaders.getAll === \"function\") {\n    return maybeNodeFetchHeaders.getAll(\"set-cookie\");\n  }\n  if (typeof maybeNodeFetchHeaders.raw === \"function\") {\n    const headers = maybeNodeFetchHeaders.raw();\n    if (Array.isArray(headers[\"set-cookie\"])) {\n      return headers[\"set-cookie\"];\n    }\n    return [];\n  }\n  const cookieString = response.headers.get(\"set-cookie\");\n  if (cookieString !== null) {\n    return (0,set_cookie_parser__WEBPACK_IMPORTED_MODULE_1__.splitCookiesString)(cookieString);\n  }\n  return [];\n}\nfunction fetchCookie(fetch, jar, ignoreError = true) {\n  const actualFetch = fetch;\n  const actualJar = jar ?? new tough_cookie__WEBPACK_IMPORTED_MODULE_0__.CookieJar();\n  async function fetchCookieWrapper(input, init) {\n    const originalInit = init ?? {};\n    init = { ...init, redirect: \"manual\" };\n    const requestUrl = typeof input === \"string\" ? input : input.url ?? input.href;\n    const cookie = await actualJar.getCookieString(requestUrl);\n    init = addCookiesToRequest(input, init, cookie);\n    const response = await actualFetch(input, init);\n    const cookies = getCookiesFromResponse(response);\n    await Promise.all(cookies.map(async (cookie2) => await actualJar.setCookie(cookie2, response.url, { ignoreError })));\n    if ((init.redirectCount ?? 0) > 0) {\n      Object.defineProperty(response, \"redirected\", { value: true });\n    }\n    if (!isRedirect(response.status)) {\n      return response;\n    }\n    return await handleRedirect(fetchCookieWrapper, originalInit, response);\n  }\n  fetchCookieWrapper.toughCookie = /*#__PURE__*/ (tough_cookie__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (tough_cookie__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(tough_cookie__WEBPACK_IMPORTED_MODULE_0__, 2)));\n  return fetchCookieWrapper;\n}\nfetchCookie.toughCookie = /*#__PURE__*/ (tough_cookie__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (tough_cookie__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(tough_cookie__WEBPACK_IMPORTED_MODULE_0__, 2)));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fetch-cookie/esm/index.js\n");

/***/ })

};
;